/******************************************************************************
 * Copyright (c) 2013, AllSeen Alliance. All rights reserved.
 *
 *    Permission to use, copy, modify, and/or distribute this software for any
 *    purpose with or without fee is hereby granted, provided that the above
 *    copyright notice and this permission notice appear in all copies.
 *
 *    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 *    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 *    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 *    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 *    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 *    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 *    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 ******************************************************************************/

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer */

#ifndef _Included_org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer
#define _Included_org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer
#ifdef __cplusplus
extern "C" {
#endif
#undef org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_PREPARE
#define org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_PREPARE 0L
#undef org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_SETDATASOURCE
#define org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_SETDATASOURCE 1L
#undef org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_START
#define org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_START 2L
#undef org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_PAUSE
#define org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_PAUSE 3L
#undef org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_STOP
#define org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_STOP 4L
#undef org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_CHANGEVOLUME
#define org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_CHANGEVOLUME 5L
#undef org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_MUTE
#define org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_MUTE 6L
#undef org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_RELEASE
#define org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_RELEASE 7L
#undef org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_REFRESHSINKS
#define org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_REFRESHSINKS 8L
/*
 * Class:     org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer
 * Method:    Prepare
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_Prepare
    (JNIEnv *, jobject, jstring);

/*
 * Class:     org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer
 * Method:    SetDataSource
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_SetDataSource
    (JNIEnv *, jobject, jstring);

/*
 * Class:     org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer
 * Method:    AddSink
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_AddSink
    (JNIEnv *, jobject, jstring, jstring, jshort);

/*
 * Class:     org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer
 * Method:    RemoveSink
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_RemoveSink
    (JNIEnv *, jobject, jstring);

/*
 * Class:     org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer
 * Method:    Start
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_Start
    (JNIEnv *, jobject);

/*
 * Class:     org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer
 * Method:    Pause
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_Pause
    (JNIEnv *, jobject);

/*
 * Class:     org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer
 * Method:    Stop
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_Stop
    (JNIEnv *, jobject);

/*
 * Class:     org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer
 * Method:    Reset
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_Reset
    (JNIEnv *, jobject);

/*
 * Class:     org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer
 * Method:    initialize
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_ChangeVolume
    (JNIEnv *, jobject, jfloat);

/*
 * Class:     org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer
 * Method:    Mute
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_Mute
    (JNIEnv *, jobject);

/*
 * Class:     org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer
 * Method:    Release
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_Relase
    (JNIEnv *, jobject);

/*
 * Class:     org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer
 * Method:    RefreshSinks
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_alljoyn_services_audio_AllJoynAudioServiceMediaPlayer_RefreshSinks
    (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
